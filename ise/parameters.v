`ifndef _parameters_vh_
`define _parameters_vh_

// 恐龙有两个碰撞点，一个是中心（脚），一个是头
parameter DINO_SCREEN_X = 1231231; // 恐龙中心在屏幕上的X坐标
parameter DINO_BITMAP_SIZE_X = 28; // 恐龙位图大小X
parameter DINO_BITMAP_SIZE_Y = 28; // 恐龙位图大小Y
parameter DINO_BITMAP_CENTER_X = 12; // 恐龙位图中心坐标X
parameter DINO_BITMAP_CENTER_Y = 28; // 恐龙位图中心坐标Y
parameter DINO_HEAD_OFFSET_X = 12; // 恐龙头部相对于中心的偏移量X
parameter DINO_HEAD_OFFSET_Y = -20; // 恐龙头部相对于中心的偏移量Y

parameter GROUND_SCREEN_Y = 100; // 地面的Y坐标

// 仙人掌的碰撞简单一点，直接是位图大小的矩形
parameter OBSTACLE_BITMAP_SIZE_X = 17; // 仙人掌位图大小X
parameter OBSTACLE_BITMAP_SIZE_Y = 28; // 仙人掌位图大小Y
parameter OBSTACLE_BITMAP_CENTER_X = 9; // 仙人掌位图中心坐标X
parameter OBSTACLE_BITMAP_CENTER_Y = 28; // 仙人掌位图中心坐标Y

parameter
    DINO_STATE_RUNNING_1 = 2'b00,
    DINO_STATE_RUNNING_2 = 2'b01,
    DINO_STATE_JUMP = 2'b10,
    DINO_STATE_COLLIDED = 2'b11; // 恐龙的四种状态

parameter [0:DINO_BITMAP_SIZE_X*DINO_BITMAP_SIZE_Y*4-1] DINO_IMG = {
    // 跑动图片1
    28'b0000000000000000000000000000,
    28'b0000000000000000000000000000,
    28'b0000000000000000000000000000,
    28'b0000000000000111111111000000,
    28'b0000000000001111111111100000,
    28'b0000000000001101111111100000,
    28'b0000000000001111111111100000,
    28'b0000000000001111111111100000,
    28'b0000000000001111111111100000,
    28'b0000000000001111100000000000,
    28'b0000000000001111111110000000,
    28'b0000000000001111111110000000,
    28'b1000000000011111000000000000,
    28'b1000000001111111000000000000,
    28'b1110000111111111111000000000,
    28'b1111001111111111001000000000,
    28'b1111111111111111000000000000,
    28'b1111111111111111000000000000,
    28'b0111111111111111000000000000,
    28'b0111111111111110000000000000,
    28'b0001111111111110000000000000,
    28'b0000111111111100000000000000,
    28'b0000011111111000000000000000,
    28'b0000001111001110000000000000,
    28'b0000001100000000000000000000,
    28'b0000001000000000000000000000,
    28'b0000001000000000000000000000,
    28'b0000001100000000000000000000,

    // 跑动图片2
    28'b0000000000000000000000000000,
    28'b0000000000000000000000000000,
    28'b0000000000000000000000000000,
    28'b0000000000000111111111000000,
    28'b0000000000001111111111100000,
    28'b0000000000001101111111100000,
    28'b0000000000001111111111100000,
    28'b0000000000001111111111100000,
    28'b0000000000001111111111100000,
    28'b0000000000001111100000000000,
    28'b0000000000001111111110000000,
    28'b0000000000001111111110000000,
    28'b1000000000011111000000000000,
    28'b1000000001111111000000000000,
    28'b1110000111111111111000000000,
    28'b1111001111111111001000000000,
    28'b1111111111111111000000000000,
    28'b1111111111111111000000000000,
    28'b0111111111111111000000000000,
    28'b0111111111111110000000000000,
    28'b0001111111111110000000000000,
    28'b0000111111111100000000000000,
    28'b0000011111111000000000000000,
    28'b0000001100011000000000000000,
    28'b0000000111001000000000000000,
    28'b0000000000001000000000000000,
    28'b0000000000001000000000000000,
    28'b0000000000001100000000000000,

    // 跳跃
    28'b0000000000000000000000000000,
    28'b0000000000000000000000000000,
    28'b0000000000000000000000000000,
    28'b0000000000000111111111000000,
    28'b0000000000001111111111100000,
    28'b0000000000001101111111100000,
    28'b0000000000001111111111100000,
    28'b0000000000001111111111100000,
    28'b0000000000001111111111100000,
    28'b0000000000001111100000000000,
    28'b0000000000001111111110000000,
    28'b0000000000001111111110000000,
    28'b1000000000011111000000000000,
    28'b1000000001111111000000000000,
    28'b1110000111111111111000000000,
    28'b1111001111111111001000000000,
    28'b1111111111111111000000000000,
    28'b1111111111111111000000000000,
    28'b0111111111111111000000000000,
    28'b0111111111111110000000000000,
    28'b0001111111111110000000000000,
    28'b0000111111111100000000000000,
    28'b0000011111111000000000000000,
    28'b0000001111011000000000000000,
    28'b0000001100001000000000000000,
    28'b0000001000001000000000000000,
    28'b0000001000001000000000000000,
    28'b0000001100001100000000000000,

    // 撞到
    28'b0000000000000000000000000000,
    28'b0000000000000000000000000000,
    28'b0000000000000000000000000000,
    28'b0000000000000111111111000000,
    28'b0000000000001111111111100000,
    28'b0000000000001100011111100000,
    28'b0000000000001101011111100000,
    28'b0000000000001100011111100000,
    28'b0000000000001111111111100000,
    28'b0000000000001111111111000000,
    28'b0000000000001111111111000000,
    28'b0000000000001111111110000000,
    28'b1000000000011111000000000000,
    28'b1000000001111111000000000000,
    28'b1110000111111111111000000000,
    28'b1111001111111111001000000000,
    28'b1111111111111111000000000000,
    28'b1111111111111111000000000000,
    28'b0111111111111111000000000000,
    28'b0111111111111110000000000000,
    28'b0001111111111110000000000000,
    28'b0000111111111100000000000000,
    28'b0000011111111000000000000000,
    28'b0000001111011000000000000000,
    28'b0000001100001000000000000000,
    28'b0000001000001000000000000000,
    28'b0000001000001000000000000000,
    28'b0000001100001100000000000000
};


parameter [0:OBSTACLE_BITMAP_SIZE_X*OBSTACLE_BITMAP_SIZE_Y-1] OBSTACLE_IMG = {
    // 仙人掌
    17'b00000001110000000,
    17'b00000011111000000,
    17'b00000011111000000,
    17'b00000011111000000,
    17'b01100011111000000,
    17'b11110011111000000,
    17'b11110011111000000,
    17'b11110011111000110,
    17'b11110011111001111,
    17'b11110011111001111,
    17'b11110011111001111,
    17'b11110011111001111,
    17'b11110011111001111,
    17'b11110011111001111,
    17'b11111111111001111,
    17'b01111111111001111,
    17'b00111111111001111,
    17'b00011111111001111,
    17'b00000011111001111,
    17'b00000011111111100,
    17'b00000011111111100,
    17'b00000011111000000,
    17'b00000011111000000,
    17'b00000011111000000,
    17'b00000011111000000,
    17'b00000011111000000,
    17'b00000011111000000,
    17'b00000011111000000
};

`endif